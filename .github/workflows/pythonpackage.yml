# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-n-publish:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8, pypy3]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install -U pip
        pip install wheel
        pip install -e .[test]
        export pandocVersion=latest # TODO
        downloadUrl=$(python -c 'import requests, sys; v = sys.argv[1]; url = "https://api.github.com/repos/jgm/pandoc/releases/" + ("" if v == "latest" else "tags/") + v; print(next(i["browser_download_url"] for i in requests.get(url).json()["assets"] if i["name"][-3:] == "deb"))' $pandocVersion) &&
        wget $downloadUrl &&
        sudo dpkg -i ${downloadUrl##*/}
    - name: Tests
      run: |
        make -j3 test
    # c.f. https://packaging.python.org/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
    - name: Build a binary wheel and a source tarball
      if: startsWith(github.event.ref, 'refs/tags') && ${{ matrix.python-version }} == 3.8
      run: |
        pip install twine
        python setup.py sdist bdist_wheel
    - name: Publish distribution ðŸ“¦ to PyPI
      if: startsWith(github.event.ref, 'refs/tags') && ${{ matrix.python-version }} == 3.8
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.pypi_password }}
